vector<vector<int>> solve(vector<vector<int>>& matrix) {
    // Guardar siguiente generacion
    vector<vector<int>> future(matrix.size(), vector<int>(matrix[0].size()));

    for (int i = 0; i < matrix.size(); i++) {
        for (int j = 0; j < matrix[i].size(); j++) {
            int aliveNeighbours = 0;
            // Contar vecinos vivos
            for (int k = -1; k <= 1; k++) {
                if (i + k < 0 || i + k >= matrix.size()) {
                    continue;
                }
                for (int m = -1; m <= 1; m++) {
                    if (j + m < 0 || j + m >= matrix[i].size()) {
                        continue;
                    }
                    aliveNeighbours += matrix[i + k][j + m];
                }
            }
            // Restarse a si mismo por culpa del loop
            aliveNeighbours -= matrix[i][j];

            // Condiciones de vida
            if (matrix[i][j] == 1 && (aliveNeighbours >= 2 && aliveNeighbours <= 3)) {
                future[i][j] = 1;
            } else if (matrix[i][j] == 0 && aliveNeighbours == 3) {
                future[i][j] = 1;
            }
        }
    }
    return future;
}